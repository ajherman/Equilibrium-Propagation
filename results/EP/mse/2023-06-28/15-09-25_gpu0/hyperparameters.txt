main.py --model Lat_MH_CNN --task CIFAR10 --channels 128 256 512 --kernels 3 3 3 --pools mmm --strides 1 1 1 --paddings 0 0 0 --fc 10 --optim adam --lrs 5e-5 5e-5 1e-5 7e-6 --head-lrs 3e-5 2e-5 3e-5 2e-5 3e-5 2e-5 3e-5 2e-5 3e-5 2e-5 --epochs 1 --act hard_sigmoid --todo train --betas 0.0 0.5 --T1 200 --T2 20 --mbs 128 --check-thm --random-sign --loss mse --save --save-nrn --device 0 

- task: CIFAR10
- data augmentation (if CIFAR10): False
- learning rate decay: False
- scale for weight init: None
- activation: hard_sigmoid
- learning rates: [5e-05, 5e-05, 1e-05, 7e-06]
- weight decays: None
- momentum (if sgd): 0.0
- optimizer: adam
- loss: mse
- alg: EP
- minibatch size: 128
- T1: 200
- T2: 20
- betas: [0.0, 0.5]
- random beta_2 sign: True
- thirdphase: False
- softmax: False
- same update VFCNN: False
- epochs: 1
- seed: None
- device: 0

Poolings : [MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False), MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False), MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)] 

Lat_MH_CNN(
  (synapses): ModuleList(
    (0): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1))
    (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))
    (2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1))
    (3): Linear(in_features=500, out_features=10, bias=True)
  )
  (head_encoders): ModuleList(
    (0): Linear(in_features=2048, out_features=50, bias=False)
    (1): Linear(in_features=2048, out_features=50, bias=False)
    (2): Linear(in_features=2048, out_features=50, bias=False)
    (3): Linear(in_features=2048, out_features=50, bias=False)
    (4): Linear(in_features=2048, out_features=50, bias=False)
    (5): Linear(in_features=2048, out_features=50, bias=False)
    (6): Linear(in_features=2048, out_features=50, bias=False)
    (7): Linear(in_features=2048, out_features=50, bias=False)
    (8): Linear(in_features=2048, out_features=50, bias=False)
    (9): Linear(in_features=2048, out_features=50, bias=False)
  )
  (head_hopfield): ModuleList(
    (0): Linear(in_features=50, out_features=50, bias=False)
    (1): Linear(in_features=50, out_features=50, bias=False)
    (2): Linear(in_features=50, out_features=50, bias=False)
    (3): Linear(in_features=50, out_features=50, bias=False)
    (4): Linear(in_features=50, out_features=50, bias=False)
    (5): Linear(in_features=50, out_features=50, bias=False)
    (6): Linear(in_features=50, out_features=50, bias=False)
    (7): Linear(in_features=50, out_features=50, bias=False)
    (8): Linear(in_features=50, out_features=50, bias=False)
    (9): Linear(in_features=50, out_features=50, bias=False)
  )
)
