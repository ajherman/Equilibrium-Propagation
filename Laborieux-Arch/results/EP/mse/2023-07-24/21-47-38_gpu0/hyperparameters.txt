../main.py --model HopfieldCNN --task CIFAR10 --channels 128 256 512 512 --kernels 3 3 3 3 --pools iiii --strides 1 1 1 1 --paddings 1 1 1 0 --fc 10 --lat-layers -1 --lat-lrs 0.01 --optim sgd --mmt 0.9 --lrs 0.25 0.15 0.1 0.08 0.05 --lr-decay --epochs 120 --wds 3e-4 3e-4 3e-4 3e-4 3e-4 --act mysig --todo train --betas 0.0 0.5 --thirdphase --T1 250 --T2 25 --mbs 128 --loss mse --save --device 0 --seed 3009345 --jit 

- task: CIFAR10
- data augmentation (if CIFAR10): False
- learning rate decay: True
- scale for weight init: None
- activation: mysig
- learning rates: [0.25, 0.15, 0.1, 0.08, 0.05]
- weight decays: [0.0003, 0.0003, 0.0003, 0.0003, 0.0003]
- momentum (if sgd): 0.9
- optimizer: sgd
- loss: mse
- alg: EP
- minibatch size: 128
- T1: 250
- T2: 25
- betas: [0.0, 0.5]
- random beta_2 sign: False
- thirdphase: True
- softmax: False
- same update VFCNN: False
- epochs: 120
- seed: 3009345
- device: 0

Poolings : ModuleList(
  (0): Identity()
  (1): Identity()
  (2): Identity()
  (3): Identity()
) 

HopfieldCNN(
  (synapses): ModuleList(
    (0): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (2): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1))
    (4): Linear(in_features=460800, out_features=10, bias=True)
  )
  (reconcriterion): MSELoss()
  (lat_syn): ModuleList(
    (0): Linear(in_features=10, out_features=10, bias=True)
  )
  (criterion): MSELoss()
  (syn_transpose): ModuleList(
    (0): Conv2d(128, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (2): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), bias=False)
    (4): Linear(in_features=10, out_features=460800, bias=False)
  )
  (pools): ModuleList(
    (0): Identity()
    (1): Identity()
    (2): Identity()
    (3): Identity()
  )
)
